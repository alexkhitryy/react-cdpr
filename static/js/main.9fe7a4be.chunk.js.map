{"version":3,"sources":["helpers/api.ts","store/types/products.ts","store/actions/productsActions.ts","store/selectors/productsSelector.ts","pages/home/components/Confirmation.tsx","pages/home/components/Pagination.tsx","pages/home/components/ProductComponent.tsx","pages/home/index.tsx","pages/product-view/index.tsx","App.tsx","reportWebVitals.js","store/reducers/productsReducer.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["base_URL","getProductsURL","checkProductsURL","name","ADD_PRODUCT","CHECK_PRODUCTS","DELETE_PRODUCT","GET_PRODUCTS_LIST","SELECT_PRODUCT","RESET_SELECTED","getProductsList","dispatch","a","axios","get","products","type","all","data","selectProduct","id","resetSelected","productsSelector","store","ConfirmationModal","modalOpen","setModalOpen","useDispatch","selected","useSelector","className","onClick","event","target","classList","contains","delete","productId","Pagination","allProducts","changePage","currentPage","productsNumberOnPage","pages","i","Math","ceil","push","map","number","index","ProductComponent","quantity","date","description","email","navigate","useNavigate","Home","useState","sortedProducts","setSortedProducts","sortingKey","setSortingKey","setCurrentPage","setProductsNumberOnPage","lastProduct","firstProduct","useEffect","handleSearch","useCallback","filter","product","Object","values","some","value","String","toLowerCase","includes","renderProducts","length","colSpan","sort","product1","product2","object2","key","slice","htmlFor","onChange","element","defaultValue","pageNumber","Confirmation","ProductView","alreadyExists","DateTime","fromISO","toISODate","newProduct","setNewProduct","error","setError","JSON","stringify","count","handleNameValidation","handleQuantityValidation","handleEmailValidation","handleInput","Number","onSubmit","preventDefault","put","post","addProduct","toUTC","toString","disabled","onBlur","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","productsReducer","state","action","rootReducer","combineReducers","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fe7a4be.chunk.js","sourcesContent":["const base_URL = \"http://yhrtwesdfd.cdprojektred.com:3000/api\";\r\n\r\nexport const getProductsURL = () => `${base_URL}/Products`;\r\nexport const deleteProductURL = (productId: number) =>\r\n  `${base_URL}/Products/${productId}`;\r\nexport const checkProductsURL = (name: any) =>\r\n  `${base_URL}/Products/count?where=${name}`;\r\nexport const replaceProductURL = (productId: number) =>\r\n  `${base_URL}/Products/${productId}`;\r\n","import { Product } from \"../../typings/product\";\r\n\r\nexport const ADD_PRODUCT = \"ADD_PRODUCT\";\r\nexport const CHECK_PRODUCTS = \"CHECK_PRODUCTS\";\r\nexport const DELETE_PRODUCT = \"DELETE_PRODUCT\";\r\nexport const GET_PRODUCTS_LIST = \"GET_PRODUCTS_LIST\";\r\nexport const REPLACE_PRODUCT = \"REPLACE_PRODUCT\";\r\nexport const SELECT_PRODUCT = \"SELECT_PRODUCT\";\r\nexport const RESET_SELECTED = \"RESET_SELECTED\";\r\n\r\nexport interface GetProductsListAction {\r\n  all: Product[];\r\n  type: typeof GET_PRODUCTS_LIST;\r\n}\r\n\r\nexport interface AddProductAction {\r\n  type: typeof ADD_PRODUCT;\r\n}\r\n\r\nexport interface DeleteProductAction {\r\n  id: number;\r\n  type: typeof DELETE_PRODUCT;\r\n}\r\n\r\nexport interface CheckProductsAction {\r\n  alreadyExists: boolean;\r\n  type: typeof CHECK_PRODUCTS;\r\n}\r\n\r\nexport interface SelectProductAction {\r\n  id: number;\r\n  type: typeof SELECT_PRODUCT;\r\n}\r\n\r\nexport interface ResetSelectedAction {\r\n  type: typeof RESET_SELECTED;\r\n}\r\n\r\nexport interface ReplaceProductAction {\r\n  type: typeof REPLACE_PRODUCT;\r\n}\r\n\r\nexport type ProductsActionTypes =\r\n  | AddProductAction\r\n  | CheckProductsAction\r\n  | DeleteProductAction\r\n  | GetProductsListAction\r\n  | ReplaceProductAction\r\n  | ResetSelectedAction\r\n  | SelectProductAction;\r\n","import axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport {\r\n  checkProductsURL,\r\n  deleteProductURL,\r\n  getProductsURL,\r\n  replaceProductURL,\r\n} from \"../../helpers/api\";\r\nimport { Product } from \"../../typings/product\";\r\nimport {\r\n  ADD_PRODUCT,\r\n  CHECK_PRODUCTS,\r\n  DELETE_PRODUCT,\r\n  GET_PRODUCTS_LIST,\r\n  ProductsActionTypes,\r\n  REPLACE_PRODUCT,\r\n  RESET_SELECTED,\r\n  SELECT_PRODUCT,\r\n} from \"../types/products\";\r\n\r\nconst getProductsList =\r\n  () => async (dispatch: Dispatch<ProductsActionTypes>) => {\r\n    const products = await axios.get(getProductsURL());\r\n    dispatch({\r\n      type: GET_PRODUCTS_LIST,\r\n      all: products.data,\r\n    });\r\n  };\r\n\r\nconst addProduct = (product: Product) => async (dispatch: Dispatch<any>) => {\r\n  await axios.post(getProductsURL(), product);\r\n  dispatch({\r\n    type: ADD_PRODUCT,\r\n  });\r\n  dispatch(getProductsList());\r\n};\r\n\r\nconst deleteProduct = (id: number) => async (dispatch: Dispatch<any>) => {\r\n  await axios.delete(deleteProductURL(id));\r\n  dispatch({\r\n    type: DELETE_PRODUCT,\r\n  });\r\n  dispatch(getProductsList());\r\n};\r\n\r\nconst checkProducts =\r\n  (name: any) => async (dispatch: Dispatch<ProductsActionTypes>) => {\r\n    const count = await (\r\n      await axios.get(checkProductsURL(JSON.stringify({ name: name })))\r\n    ).data.count;\r\n    dispatch({\r\n      type: CHECK_PRODUCTS,\r\n      alreadyExists: count > 0 ?? true,\r\n    });\r\n  };\r\n\r\nconst selectProduct = (id: number): ProductsActionTypes => ({\r\n  id,\r\n  type: SELECT_PRODUCT,\r\n});\r\n\r\nconst resetSelected = (): ProductsActionTypes => ({\r\n  type: RESET_SELECTED,\r\n});\r\n\r\nconst replaceProduct =\r\n  (id: number, product: Product) => async (dispatch: Dispatch<any>) => {\r\n    await axios.put(replaceProductURL(id), product);\r\n    dispatch({\r\n      type: REPLACE_PRODUCT,\r\n    });\r\n    dispatch(getProductsList());\r\n  };\r\n\r\nexport {\r\n  addProduct,\r\n  checkProducts,\r\n  deleteProduct,\r\n  getProductsList,\r\n  replaceProduct,\r\n  resetSelected,\r\n  selectProduct,\r\n};\r\n","import { RootStore } from \"..\";\r\n\r\nexport const productsSelector = (store: RootStore) => store.products;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  deleteProduct,\r\n  resetSelected,\r\n} from \"../../../store/actions/productsActions\";\r\nimport { productsSelector } from \"../../../store/selectors/productsSelector\";\r\n\r\ninterface ModalProps {\r\n  modalOpen: boolean;\r\n  setModalOpen: any;\r\n}\r\n\r\nconst ConfirmationModal: FunctionComponent<ModalProps> = ({\r\n  modalOpen,\r\n  setModalOpen,\r\n}): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const { selected } = useSelector(productsSelector);\r\n\r\n  const handleClose = (event: any) => {\r\n    event.target.classList.contains(\"modal-shadow\") && setModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal-shadow\" onClick={handleClose}>\r\n      <div className=\"confirmation-modal\">\r\n        <h3>Are you sure you want to remove {selected?.name}?</h3>\r\n        <div>\r\n          <button\r\n            className=\"main-btn modal-btn\"\r\n            onClick={() => {\r\n              dispatch(deleteProduct(selected?.id));\r\n              setModalOpen(false);\r\n            }}\r\n          >\r\n            yes\r\n          </button>\r\n          <button\r\n            className=\"main-btn modal-btn\"\r\n            onClick={() => {\r\n              dispatch(resetSelected());\r\n              setModalOpen(false);\r\n            }}\r\n          >\r\n            no\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmationModal;\r\n","import React, { FunctionComponent } from \"react\";\r\n\r\ninterface PaginationProps {\r\n  allProducts: number;\r\n  changePage: (pageNumber: number) => void;\r\n  currentPage: number;\r\n  productsNumberOnPage: number;\r\n}\r\nconst Pagination: FunctionComponent<PaginationProps> = ({\r\n  allProducts,\r\n  changePage,\r\n  currentPage,\r\n  productsNumberOnPage,\r\n}): JSX.Element => {\r\n  const pages = [];\r\n  for (let i = 1; i <= Math.ceil(allProducts / productsNumberOnPage); i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  return (\r\n    <div className={\"pagination\"}>\r\n      <div className={\"pagination-container\"}>\r\n        {pages.map((number, index) => (\r\n          <button\r\n            className={`main-btn page-btn ${\r\n              currentPage === number ? \"active\" : \"\"\r\n            }`}\r\n            key={index}\r\n            onClick={() => changePage(number)}\r\n          >\r\n            {number}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { selectProduct } from \"../../../store/actions/productsActions\";\r\n\r\ninterface ProductProps {\r\n  date: string;\r\n  description: string;\r\n  email: string;\r\n  id: number;\r\n  name: string;\r\n  quantity: number;\r\n  setModalOpen: any;\r\n}\r\n\r\nconst ProductComponent: FunctionComponent<ProductProps> = ({\r\n  id,\r\n  name,\r\n  quantity,\r\n  date,\r\n  description,\r\n  email,\r\n  setModalOpen,\r\n}): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td>{id}</td>\r\n        <td>{name}</td>\r\n        <td>{quantity}</td>\r\n        <td>{date}</td>\r\n        <td>{description}</td>\r\n        <td>{email}</td>\r\n        <td className=\"btn-cell\">\r\n          <button\r\n            className=\"main-btn table-btn\"\r\n            onClick={() => {\r\n              dispatch(selectProduct(id));\r\n              navigate(`/product?id=${id}`);\r\n            }}\r\n          >\r\n            EDIT\r\n          </button>\r\n        </td>\r\n        <td className=\"btn-cell\">\r\n          <button\r\n            className=\"main-btn table-btn\"\r\n            onClick={() => {\r\n              setModalOpen(true);\r\n              dispatch(selectProduct(id));\r\n            }}\r\n          >\r\n            DELETE\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductComponent;\r\n","import React, {\r\n  FunctionComponent,\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  getProductsList,\r\n  resetSelected,\r\n} from \"../../store/actions/productsActions\";\r\nimport { productsSelector } from \"../../store/selectors/productsSelector\";\r\nimport { Product } from \"../../typings/product\";\r\nimport { ConfirmationModal, Pagination, ProductComponent } from \"./components\";\r\nimport \"./style.css\";\r\n\r\nconst Home: FunctionComponent = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { all } = useSelector(productsSelector);\r\n  const [sortedProducts, setSortedProducts] = useState<Product[]>(all);\r\n  const [sortingKey, setSortingKey] = useState<string>(\"id\");\r\n  const [currentPage, setCurrentPage] = useState<number>(1);\r\n  const [productsNumberOnPage, setProductsNumberOnPage] = useState<number>(10);\r\n  const [modalOpen, setModalOpen] = useState<boolean>(false);\r\n\r\n  const tableHeaderArray = [\r\n    \"Id\",\r\n    \"Name\",\r\n    \"Quantity\",\r\n    \"Date\",\r\n    \"Description\",\r\n    \"Email\",\r\n    \"\",\r\n    \"\",\r\n  ];\r\n  const productsNumberOnPageArray = [5, 10, 15, 20];\r\n\r\n  const lastProduct = currentPage * productsNumberOnPage;\r\n  const firstProduct = lastProduct - productsNumberOnPage;\r\n  const changePage = (pageNumber: number) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getProductsList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    setSortedProducts(all);\r\n  }, [all]);\r\n\r\n  const compareObjects = (object1: any, object2: any, key: string) => {\r\n    const obj1 = object1[key];\r\n    const obj2 = object2[key];\r\n    return obj1 > obj2 ? 1 : -1;\r\n  };\r\n\r\n  const handleSearch = useCallback(\r\n    (event: any) => {\r\n      setSortedProducts(\r\n        all.filter((product: Product) =>\r\n          Object.values(product).some((value) =>\r\n            String(value)\r\n              .toLowerCase()\r\n              .includes(event.target.value.toLowerCase())\r\n          )\r\n        )\r\n      );\r\n    },\r\n    [all]\r\n  );\r\n\r\n  const renderProducts = useCallback(() => {\r\n    if (sortedProducts?.length === 0) {\r\n      return (\r\n        <tr>\r\n          <td colSpan={8} className=\"no-products\">\r\n            No products match your request\r\n          </td>\r\n        </tr>\r\n      );\r\n    }\r\n\r\n    return sortedProducts\r\n      ?.sort((product1, product2) => {\r\n        return compareObjects(product1, product2, sortingKey);\r\n      })\r\n      ?.slice(firstProduct, lastProduct)\r\n      ?.map(({ id, name, quantity, date, description, email }: Product) => (\r\n        <ProductComponent\r\n          date={date}\r\n          description={description}\r\n          email={email}\r\n          id={id}\r\n          key={id}\r\n          name={name}\r\n          quantity={quantity}\r\n          setModalOpen={setModalOpen}\r\n        />\r\n      ));\r\n  }, [sortedProducts, sortingKey, firstProduct, lastProduct]);\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <div className=\"top-container\">\r\n        <div className=\"search-component\">\r\n          <label htmlFor=\"search\">Search:</label>\r\n          <input\r\n            className=\"searchbar\"\r\n            id=\"search\"\r\n            type=\"search\"\r\n            onChange={handleSearch}\r\n          />\r\n        </div>\r\n        <button\r\n          className=\"main-btn add-btn\"\r\n          onClick={() => {\r\n            navigate(\"/product\");\r\n            dispatch(resetSelected());\r\n          }}\r\n        >\r\n          Add a new product\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"table-container\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              {tableHeaderArray.map((element, index) => (\r\n                <th\r\n                  className={`${\r\n                    element.toLowerCase() === sortingKey ? \"select\" : \"\"\r\n                  }`}\r\n                  id={element.toLowerCase()}\r\n                  key={index}\r\n                  onClick={(event: any) => setSortingKey(event?.target.id)}\r\n                >\r\n                  {element}\r\n                  {element.toLowerCase() === sortingKey && ` ↓`}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>{renderProducts()}</tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <div className=\"select-container\">\r\n        <select\r\n          name=\"products-per-page\"\r\n          id=\"products-per-page\"\r\n          defaultValue={productsNumberOnPage}\r\n          onChange={(event: any) => setProductsNumberOnPage(event.target.value)}\r\n        >\r\n          {productsNumberOnPageArray.map((number, index) => (\r\n            <option key={index} value={number}>\r\n              {number}\r\n            </option>\r\n          ))}\r\n          <option\r\n            value={all.length}\r\n            onClick={() => setProductsNumberOnPage(all.length)}\r\n          >\r\n            all\r\n          </option>\r\n        </select>\r\n      </div>\r\n\r\n      <Pagination\r\n        allProducts={sortedProducts.length}\r\n        changePage={changePage}\r\n        currentPage={currentPage}\r\n        productsNumberOnPage={productsNumberOnPage}\r\n      />\r\n      {modalOpen && (\r\n        <ConfirmationModal modalOpen={modalOpen} setModalOpen={setModalOpen} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, {\r\n  FunctionComponent,\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  addProduct,\r\n  checkProducts,\r\n  replaceProduct,\r\n  resetSelected,\r\n} from \"../../store/actions/productsActions\";\r\nimport { DateTime } from \"luxon\";\r\nimport \"./style.css\";\r\nimport { productsSelector } from \"../../store/selectors/productsSelector\";\r\n\r\ninterface Errors {\r\n  email: string;\r\n  name: string;\r\n  quantity: string;\r\n}\r\n\r\nconst ProductView: FunctionComponent = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { alreadyExists, selected } = useSelector(productsSelector);\r\n  const [newProduct, setNewProduct] = useState<any>({\r\n    description: selected?.description || \"\",\r\n    email: selected?.email || \"\",\r\n    name: selected?.name || \"\",\r\n    quantity: selected?.quantity || 0,\r\n    date: DateTime.fromISO(selected?.date).toISODate() || \"\",\r\n  });\r\n  const [error, setError] = useState<Errors>({\r\n    email: \"\",\r\n    name: \"\",\r\n    quantity: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    !selected.id && dispatch(checkProducts(newProduct.name));\r\n  }, [dispatch, newProduct.name, selected]);\r\n\r\n  const handleNameValidation = useCallback(\r\n    (event: any) => {\r\n      event.target.value.length === 0 &&\r\n        setError({ ...error, name: \"Name must not be empty\" });\r\n      event.target.value.length > 0 &&\r\n        event.target.value.length < 5 &&\r\n        setError({ ...error, name: \"Name must contain at least 5 characters\" });\r\n      alreadyExists && setError({ ...error, name: \"Name already exists\" });\r\n      event.target.value.length > 5 &&\r\n        !alreadyExists &&\r\n        setError({ ...error, name: \"\" });\r\n    },\r\n    [alreadyExists, error]\r\n  );\r\n\r\n  const handleQuantityValidation = useCallback(() => {\r\n    return typeof newProduct.quantity !== \"number\"\r\n      ? setError({ ...error, quantity: \"Quantity must be a number\" })\r\n      : setError({ ...error, quantity: \"\" });\r\n  }, [newProduct.quantity, error]);\r\n\r\n  const handleEmailValidation = useCallback(\r\n    (event: any) => {\r\n      return event.target.value.length === 0\r\n        ? setError({ ...error, email: \"Email must not be empty\" })\r\n        : setError({ ...error, email: \"\" });\r\n    },\r\n    [error]\r\n  );\r\n\r\n  const handleInput = (event: any) => {\r\n    if (event.target.name === \"quantity\") {\r\n      setNewProduct({ ...newProduct, quantity: Number(event.target.value) });\r\n    } else\r\n      setNewProduct({ ...newProduct, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const isFormValid = (): boolean =>\r\n    !alreadyExists &&\r\n    error.name === \"\" &&\r\n    error.email === \"\" &&\r\n    error.quantity === \"\";\r\n\r\n  const handleSubmit = (event: any) => {\r\n    event.preventDefault();\r\n\r\n    if (isFormValid()) {\r\n      selected.id\r\n        ? dispatch(replaceProduct(selected.id, newProduct))\r\n        : dispatch(\r\n            addProduct({\r\n              ...newProduct,\r\n              date: DateTime.fromISO(newProduct.date).toUTC().toString(),\r\n            })\r\n          );\r\n      setNewProduct({\r\n        description: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        quantity: 0,\r\n      });\r\n      dispatch(resetSelected());\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"block\">\r\n        <label htmlFor=\"name\">Name*:</label>\r\n        <input\r\n          disabled={selected.name ? true : false}\r\n          id=\"name\"\r\n          name=\"name\"\r\n          type=\"text\"\r\n          onBlur={handleNameValidation}\r\n          onChange={handleInput}\r\n          value={newProduct.name}\r\n        />\r\n        <span>{error.name}</span>\r\n      </div>\r\n\r\n      <div className=\"block\">\r\n        <label htmlFor=\"quantity\">Quantity*:</label>\r\n        <input\r\n          id=\"quantity\"\r\n          name=\"quantity\"\r\n          type=\"number\"\r\n          onBlur={handleQuantityValidation}\r\n          onChange={handleInput}\r\n          value={newProduct.quantity}\r\n        />\r\n        <span>{error.quantity}</span>\r\n      </div>\r\n\r\n      <div className=\"block\">\r\n        <label htmlFor=\"date\">Date:</label>\r\n        <input\r\n          id=\"date\"\r\n          name=\"date\"\r\n          type=\"date\"\r\n          onChange={handleInput}\r\n          value={newProduct.date}\r\n        />\r\n        <span>{error.quantity}</span>\r\n      </div>\r\n\r\n      <div className=\"block\">\r\n        <label htmlFor=\"email\">Email*:</label>\r\n        <input\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type=\"email\"\r\n          onBlur={handleEmailValidation}\r\n          onChange={handleInput}\r\n          value={newProduct.email}\r\n        />\r\n        <span>{error.email}</span>\r\n      </div>\r\n\r\n      <div className=\"block\">\r\n        <label htmlFor=\"description\">Description:</label>\r\n        <textarea\r\n          id=\"description\"\r\n          name=\"description\"\r\n          onChange={handleInput}\r\n          value={newProduct.description}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"btn-block\">\r\n        <button\r\n          className=\"main-btn\"\r\n          onClick={() => {\r\n            navigate(\"/\");\r\n            dispatch(resetSelected());\r\n          }}\r\n        >\r\n          Back\r\n        </button>\r\n        <button className=\"main-btn\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ProductView;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\n//pages\r\nimport { ProductView, Home } from \"./pages\";\r\n\r\nconst App: FunctionComponent = (): JSX.Element => {\r\n  return (\r\n    <>\r\n      <Routes>\r\n        <Route element={<Home />} path={\"/\"} />\r\n        <Route element={<ProductView />} path={\"/product\"} />\r\n      </Routes>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { Product } from \"../../typings/product\";\r\nimport {\r\n  ProductsActionTypes,\r\n  GET_PRODUCTS_LIST,\r\n  DELETE_PRODUCT,\r\n  ADD_PRODUCT,\r\n  CHECK_PRODUCTS,\r\n  SELECT_PRODUCT,\r\n  RESET_SELECTED,\r\n} from \"../types/products\";\r\n\r\nconst INITIAL_STATE = {\r\n  all: [],\r\n  alreadyExists: false,\r\n  selected: {},\r\n};\r\n\r\nconst productsReducer = (\r\n  state = INITIAL_STATE,\r\n  action: ProductsActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case GET_PRODUCTS_LIST: {\r\n      return {\r\n        ...state,\r\n        all: action.all,\r\n      };\r\n    }\r\n    case ADD_PRODUCT: {\r\n      return {\r\n        ...state,\r\n      };\r\n    }\r\n    case CHECK_PRODUCTS: {\r\n      return {\r\n        ...state,\r\n        alreadyExists: action.alreadyExists,\r\n      };\r\n    }\r\n    case DELETE_PRODUCT: {\r\n      return {\r\n        ...state,\r\n        all: [\r\n          ...state.all.filter((product: Product) => product.id !== action.id),\r\n        ],\r\n      };\r\n    }\r\n    case SELECT_PRODUCT: {\r\n      return {\r\n        ...state,\r\n        selected: state.all.filter(\r\n          (product: Product) => product.id === action.id\r\n        )[0],\r\n      };\r\n    }\r\n    case RESET_SELECTED: {\r\n      return {\r\n        ...state,\r\n        selected: {},\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default productsReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport productsReducer from \"./productsReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  products: productsReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport { Product } from \"../typings/product\";\r\n\r\nexport interface RootStore {\r\n  products: {\r\n    all: Product[];\r\n    alreadyExists: boolean;\r\n    selected: Product;\r\n  };\r\n}\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n//router\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n//redux\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}